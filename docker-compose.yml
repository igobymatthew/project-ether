version: "3.9"
name: ${PROJECT_NAME}

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: ${PROJECT_NAME}-api
    environment:
      ETHER_LLM_MODEL: ${ETHER_LLM_MODEL}
      ALLOW_ORIGINS: ${ALLOW_ORIGINS}
      # Point API to external TTS service (so frontend can keep using /tts on API if you proxy later)
      TTS_BASE_URL: http://tts:${TTS_PORT}
    ports:
      - "${API_PORT}:8000"
    volumes:
      - ./scenes:/app/scenes:ro
      - ./app:/app/app:ro
      - ./models:/models:ro
    depends_on:
      - tts
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/"]
      interval: 15s
      timeout: 3s
      retries: 10

  tts:
    build:
      context: .
      dockerfile: Dockerfile.tts
      args:
        TORCH_VARIANT: ${TORCH_VARIANT}
    container_name: ${PROJECT_NAME}-tts
    environment:
      TTS_BACKEND: ${TTS_BACKEND}
    ports:
      - "${TTS_PORT}:8010"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8010/health"]
      interval: 15s
      timeout: 3s
      retries: 10

  frontend:
    image: nginx:1.27-alpine
    container_name: ${PROJECT_NAME}-frontend
    ports:
      - "${FRONTEND_PORT}:80"
    volumes:
      - ./app/frontend:/usr/share/nginx/html:ro
      - ./ops/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
      - tts
